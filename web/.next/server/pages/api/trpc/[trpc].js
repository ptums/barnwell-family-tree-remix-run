"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/trpc/[trpc]";
exports.ids = ["pages/api/trpc/[trpc]"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "@trpc/server":
/*!*******************************!*\
  !*** external "@trpc/server" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("@trpc/server");

/***/ }),

/***/ "zod":
/*!**********************!*\
  !*** external "zod" ***!
  \**********************/
/***/ ((module) => {

module.exports = import("zod");;

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "(api)/./node_modules/@trpc/server/adapters/next/dist/trpc-server-adapters-next.cjs.dev.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@trpc/server/adapters/next/dist/trpc-server-adapters-next.cjs.dev.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar transformTRPCResponse = __webpack_require__(/*! ../../../dist/transformTRPCResponse-c654ea92.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/dist/transformTRPCResponse-c654ea92.cjs.dev.js\");\nvar nodeHTTPRequestHandler = __webpack_require__(/*! ../../../dist/nodeHTTPRequestHandler-36ddaba2.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/dist/nodeHTTPRequestHandler-36ddaba2.cjs.dev.js\");\n__webpack_require__(/*! url */ \"url\");\n__webpack_require__(/*! ../../../dist/resolveHTTPResponse-55b2c9bd.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/dist/resolveHTTPResponse-55b2c9bd.cjs.dev.js\");\n__webpack_require__(/*! ../../../dist/codes-130e62df.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/dist/codes-130e62df.cjs.dev.js\");\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createNextApiHandler(opts) {\n  return async (req, res) => {\n    function getPath() {\n      if (typeof req.query.trpc === 'string') {\n        return req.query.trpc;\n      }\n\n      if (Array.isArray(req.query.trpc)) {\n        return req.query.trpc.join('/');\n      }\n\n      return null;\n    }\n\n    const path = getPath();\n\n    if (path === null) {\n      const error = opts.router.getErrorShape({\n        error: new transformTRPCResponse.TRPCError({\n          message: 'Query \"trpc\" not found - is the file named `[trpc]`.ts or `[...trpc].ts`?',\n          code: 'INTERNAL_SERVER_ERROR'\n        }),\n        type: 'unknown',\n        ctx: undefined,\n        path: undefined,\n        input: undefined\n      });\n      const json = {\n        id: -1,\n        error\n      };\n      res.statusCode = 500;\n      res.json(json);\n      return;\n    }\n\n    await nodeHTTPRequestHandler.nodeHTTPRequestHandler({ ...opts,\n      req,\n      res,\n      path\n    });\n  };\n}\n\nexports.createNextApiHandler = createNextApiHandler;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2FkYXB0ZXJzL25leHQvZGlzdC90cnBjLXNlcnZlci1hZGFwdGVycy1uZXh0LmNqcy5kZXYuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCw0QkFBNEIsbUJBQU8sQ0FBQyxpSkFBeUQ7QUFDN0YsNkJBQTZCLG1CQUFPLENBQUMsbUpBQTBEO0FBQy9GLG1CQUFPLENBQUMsZ0JBQUs7QUFDYixtQkFBTyxDQUFDLDZJQUF1RDtBQUMvRCxtQkFBTyxDQUFDLGlIQUF5Qzs7QUFFakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDBEQUEwRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQSw0QkFBNEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXJud2VsbC1mYW1pbHktdHJlZS1yZW1peC1ydW4vLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2FkYXB0ZXJzL25leHQvZGlzdC90cnBjLXNlcnZlci1hZGFwdGVycy1uZXh0LmNqcy5kZXYuanM/MDc2YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbnZhciB0cmFuc2Zvcm1UUlBDUmVzcG9uc2UgPSByZXF1aXJlKCcuLi8uLi8uLi9kaXN0L3RyYW5zZm9ybVRSUENSZXNwb25zZS1jNjU0ZWE5Mi5janMuZGV2LmpzJyk7XG52YXIgbm9kZUhUVFBSZXF1ZXN0SGFuZGxlciA9IHJlcXVpcmUoJy4uLy4uLy4uL2Rpc3Qvbm9kZUhUVFBSZXF1ZXN0SGFuZGxlci0zNmRkYWJhMi5janMuZGV2LmpzJyk7XG5yZXF1aXJlKCd1cmwnKTtcbnJlcXVpcmUoJy4uLy4uLy4uL2Rpc3QvcmVzb2x2ZUhUVFBSZXNwb25zZS01NWIyYzliZC5janMuZGV2LmpzJyk7XG5yZXF1aXJlKCcuLi8uLi8uLi9kaXN0L2NvZGVzLTEzMGU2MmRmLmNqcy5kZXYuanMnKTtcblxuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueSAqL1xuZnVuY3Rpb24gY3JlYXRlTmV4dEFwaUhhbmRsZXIob3B0cykge1xuICByZXR1cm4gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgZnVuY3Rpb24gZ2V0UGF0aCgpIHtcbiAgICAgIGlmICh0eXBlb2YgcmVxLnF1ZXJ5LnRycGMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiByZXEucXVlcnkudHJwYztcbiAgICAgIH1cblxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkocmVxLnF1ZXJ5LnRycGMpKSB7XG4gICAgICAgIHJldHVybiByZXEucXVlcnkudHJwYy5qb2luKCcvJyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIGNvbnN0IHBhdGggPSBnZXRQYXRoKCk7XG5cbiAgICBpZiAocGF0aCA9PT0gbnVsbCkge1xuICAgICAgY29uc3QgZXJyb3IgPSBvcHRzLnJvdXRlci5nZXRFcnJvclNoYXBlKHtcbiAgICAgICAgZXJyb3I6IG5ldyB0cmFuc2Zvcm1UUlBDUmVzcG9uc2UuVFJQQ0Vycm9yKHtcbiAgICAgICAgICBtZXNzYWdlOiAnUXVlcnkgXCJ0cnBjXCIgbm90IGZvdW5kIC0gaXMgdGhlIGZpbGUgbmFtZWQgYFt0cnBjXWAudHMgb3IgYFsuLi50cnBjXS50c2A/JyxcbiAgICAgICAgICBjb2RlOiAnSU5URVJOQUxfU0VSVkVSX0VSUk9SJ1xuICAgICAgICB9KSxcbiAgICAgICAgdHlwZTogJ3Vua25vd24nLFxuICAgICAgICBjdHg6IHVuZGVmaW5lZCxcbiAgICAgICAgcGF0aDogdW5kZWZpbmVkLFxuICAgICAgICBpbnB1dDogdW5kZWZpbmVkXG4gICAgICB9KTtcbiAgICAgIGNvbnN0IGpzb24gPSB7XG4gICAgICAgIGlkOiAtMSxcbiAgICAgICAgZXJyb3JcbiAgICAgIH07XG4gICAgICByZXMuc3RhdHVzQ29kZSA9IDUwMDtcbiAgICAgIHJlcy5qc29uKGpzb24pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGF3YWl0IG5vZGVIVFRQUmVxdWVzdEhhbmRsZXIubm9kZUhUVFBSZXF1ZXN0SGFuZGxlcih7IC4uLm9wdHMsXG4gICAgICByZXEsXG4gICAgICByZXMsXG4gICAgICBwYXRoXG4gICAgfSk7XG4gIH07XG59XG5cbmV4cG9ydHMuY3JlYXRlTmV4dEFwaUhhbmRsZXIgPSBjcmVhdGVOZXh0QXBpSGFuZGxlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/@trpc/server/adapters/next/dist/trpc-server-adapters-next.cjs.dev.js\n");

/***/ }),

/***/ "(api)/./node_modules/@trpc/server/adapters/next/dist/trpc-server-adapters-next.cjs.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@trpc/server/adapters/next/dist/trpc-server-adapters-next.cjs.js ***!
  \***************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./trpc-server-adapters-next.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/adapters/next/dist/trpc-server-adapters-next.cjs.dev.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2FkYXB0ZXJzL25leHQvZGlzdC90cnBjLXNlcnZlci1hZGFwdGVycy1uZXh0LmNqcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLEVBQUUsK0tBQWtFO0FBQ3BFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFybndlbGwtZmFtaWx5LXRyZWUtcmVtaXgtcnVuLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9hZGFwdGVycy9uZXh0L2Rpc3QvdHJwYy1zZXJ2ZXItYWRhcHRlcnMtbmV4dC5janMuanM/NDk1OCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi90cnBjLXNlcnZlci1hZGFwdGVycy1uZXh0LmNqcy5wcm9kLmpzXCIpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi90cnBjLXNlcnZlci1hZGFwdGVycy1uZXh0LmNqcy5kZXYuanNcIik7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/@trpc/server/adapters/next/dist/trpc-server-adapters-next.cjs.js\n");

/***/ }),

/***/ "(api)/./node_modules/@trpc/server/dist/codes-130e62df.cjs.dev.js":
/*!******************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/codes-130e62df.cjs.dev.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nfunction invert(obj) {\n  const newObj = Object.create(null);\n\n  for (const key in obj) {\n    const v = obj[key];\n    newObj[v] = key;\n  }\n\n  return newObj;\n}\n\n/**\n * JSON-RPC 2.0 Error codes\n *\n * `-32000` to `-32099` are reserved for implementation-defined server-errors.\n * For tRPC we're copying the last digits of HTTP 4XX errors.\n */\n\nconst TRPC_ERROR_CODES_BY_KEY = {\n  /**\n   * Invalid JSON was received by the server.\n   * An error occurred on the server while parsing the JSON text.\n   */\n  PARSE_ERROR: -32700,\n\n  /**\n   * The JSON sent is not a valid Request object.\n   */\n  BAD_REQUEST: -32600,\n  // 400\n\n  /**\n   * Internal JSON-RPC error.\n   */\n  INTERNAL_SERVER_ERROR: -32603,\n  // Implementation specific errors\n  UNAUTHORIZED: -32001,\n  // 401\n  FORBIDDEN: -32003,\n  // 403\n  NOT_FOUND: -32004,\n  // 404\n  METHOD_NOT_SUPPORTED: -32005,\n  // 405\n  TIMEOUT: -32008,\n  // 408\n  CONFLICT: -32009,\n  // 409\n  PRECONDITION_FAILED: -32012,\n  // 412\n  PAYLOAD_TOO_LARGE: -32013,\n  // 413\n  CLIENT_CLOSED_REQUEST: -32099 // 499\n\n};\nconst TRPC_ERROR_CODES_BY_NUMBER = /*#__PURE__*/invert(TRPC_ERROR_CODES_BY_KEY);\n\nexports.TRPC_ERROR_CODES_BY_KEY = TRPC_ERROR_CODES_BY_KEY;\nexports.TRPC_ERROR_CODES_BY_NUMBER = TRPC_ERROR_CODES_BY_NUMBER;\nexports.invert = invert;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvY29kZXMtMTMwZTYyZGYuY2pzLmRldi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsK0JBQStCO0FBQy9CLGtDQUFrQztBQUNsQyxjQUFjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFybndlbGwtZmFtaWx5LXRyZWUtcmVtaXgtcnVuLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L2NvZGVzLTEzMGU2MmRmLmNqcy5kZXYuanM/OGI3MiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGludmVydChvYmopIHtcbiAgY29uc3QgbmV3T2JqID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcblxuICBmb3IgKGNvbnN0IGtleSBpbiBvYmopIHtcbiAgICBjb25zdCB2ID0gb2JqW2tleV07XG4gICAgbmV3T2JqW3ZdID0ga2V5O1xuICB9XG5cbiAgcmV0dXJuIG5ld09iajtcbn1cblxuLyoqXG4gKiBKU09OLVJQQyAyLjAgRXJyb3IgY29kZXNcbiAqXG4gKiBgLTMyMDAwYCB0byBgLTMyMDk5YCBhcmUgcmVzZXJ2ZWQgZm9yIGltcGxlbWVudGF0aW9uLWRlZmluZWQgc2VydmVyLWVycm9ycy5cbiAqIEZvciB0UlBDIHdlJ3JlIGNvcHlpbmcgdGhlIGxhc3QgZGlnaXRzIG9mIEhUVFAgNFhYIGVycm9ycy5cbiAqL1xuXG5jb25zdCBUUlBDX0VSUk9SX0NPREVTX0JZX0tFWSA9IHtcbiAgLyoqXG4gICAqIEludmFsaWQgSlNPTiB3YXMgcmVjZWl2ZWQgYnkgdGhlIHNlcnZlci5cbiAgICogQW4gZXJyb3Igb2NjdXJyZWQgb24gdGhlIHNlcnZlciB3aGlsZSBwYXJzaW5nIHRoZSBKU09OIHRleHQuXG4gICAqL1xuICBQQVJTRV9FUlJPUjogLTMyNzAwLFxuXG4gIC8qKlxuICAgKiBUaGUgSlNPTiBzZW50IGlzIG5vdCBhIHZhbGlkIFJlcXVlc3Qgb2JqZWN0LlxuICAgKi9cbiAgQkFEX1JFUVVFU1Q6IC0zMjYwMCxcbiAgLy8gNDAwXG5cbiAgLyoqXG4gICAqIEludGVybmFsIEpTT04tUlBDIGVycm9yLlxuICAgKi9cbiAgSU5URVJOQUxfU0VSVkVSX0VSUk9SOiAtMzI2MDMsXG4gIC8vIEltcGxlbWVudGF0aW9uIHNwZWNpZmljIGVycm9yc1xuICBVTkFVVEhPUklaRUQ6IC0zMjAwMSxcbiAgLy8gNDAxXG4gIEZPUkJJRERFTjogLTMyMDAzLFxuICAvLyA0MDNcbiAgTk9UX0ZPVU5EOiAtMzIwMDQsXG4gIC8vIDQwNFxuICBNRVRIT0RfTk9UX1NVUFBPUlRFRDogLTMyMDA1LFxuICAvLyA0MDVcbiAgVElNRU9VVDogLTMyMDA4LFxuICAvLyA0MDhcbiAgQ09ORkxJQ1Q6IC0zMjAwOSxcbiAgLy8gNDA5XG4gIFBSRUNPTkRJVElPTl9GQUlMRUQ6IC0zMjAxMixcbiAgLy8gNDEyXG4gIFBBWUxPQURfVE9PX0xBUkdFOiAtMzIwMTMsXG4gIC8vIDQxM1xuICBDTElFTlRfQ0xPU0VEX1JFUVVFU1Q6IC0zMjA5OSAvLyA0OTlcblxufTtcbmNvbnN0IFRSUENfRVJST1JfQ09ERVNfQllfTlVNQkVSID0gLyojX19QVVJFX18qL2ludmVydChUUlBDX0VSUk9SX0NPREVTX0JZX0tFWSk7XG5cbmV4cG9ydHMuVFJQQ19FUlJPUl9DT0RFU19CWV9LRVkgPSBUUlBDX0VSUk9SX0NPREVTX0JZX0tFWTtcbmV4cG9ydHMuVFJQQ19FUlJPUl9DT0RFU19CWV9OVU1CRVIgPSBUUlBDX0VSUk9SX0NPREVTX0JZX05VTUJFUjtcbmV4cG9ydHMuaW52ZXJ0ID0gaW52ZXJ0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/@trpc/server/dist/codes-130e62df.cjs.dev.js\n");

/***/ }),

/***/ "(api)/./node_modules/@trpc/server/dist/nodeHTTPRequestHandler-36ddaba2.cjs.dev.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/nodeHTTPRequestHandler-36ddaba2.cjs.dev.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar url = __webpack_require__(/*! url */ \"url\");\nvar resolveHTTPResponse = __webpack_require__(/*! ./resolveHTTPResponse-55b2c9bd.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/dist/resolveHTTPResponse-55b2c9bd.cjs.dev.js\");\nvar transformTRPCResponse = __webpack_require__(/*! ./transformTRPCResponse-c654ea92.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/dist/transformTRPCResponse-c654ea92.cjs.dev.js\");\n\nasync function getPostBody({\n  req,\n  maxBodySize\n}) {\n  return new Promise(resolve => {\n    if ('body' in req) {\n      resolve({\n        ok: true,\n        data: req.body\n      });\n      return;\n    }\n\n    let body = '';\n    let hasBody = false;\n    req.on('data', function (data) {\n      body += data;\n      hasBody = true;\n\n      if (typeof maxBodySize === 'number' && body.length > maxBodySize) {\n        resolve({\n          ok: false,\n          error: new transformTRPCResponse.TRPCError({\n            code: 'PAYLOAD_TOO_LARGE'\n          })\n        });\n        req.socket.destroy();\n      }\n    });\n    req.on('end', () => {\n      resolve({\n        ok: true,\n        data: hasBody ? body : undefined\n      });\n    });\n  });\n}\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nresolveHTTPResponse.assertNotBrowser();\nasync function nodeHTTPRequestHandler(opts) {\n  var _opts$teardown;\n\n  const createContext = async function _createContext() {\n    var _opts$createContext;\n\n    return await ((_opts$createContext = opts.createContext) === null || _opts$createContext === void 0 ? void 0 : _opts$createContext.call(opts, opts));\n  };\n\n  const {\n    path,\n    router\n  } = opts;\n  const bodyResult = await getPostBody(opts);\n  const query = opts.req.query ? new url.URLSearchParams(opts.req.query) : new url.URLSearchParams(opts.req.url.split('?')[1]);\n  const req = {\n    method: opts.req.method,\n    headers: opts.req.headers,\n    query,\n    body: bodyResult.ok ? bodyResult.data : undefined\n  };\n  const result = await resolveHTTPResponse.resolveHTTPResponse({\n    batching: opts.batching,\n    responseMeta: opts.responseMeta,\n    path,\n    createContext,\n    router,\n    req,\n    error: bodyResult.ok ? null : bodyResult.error,\n\n    onError(o) {\n      var _opts$onError;\n\n      opts === null || opts === void 0 ? void 0 : (_opts$onError = opts.onError) === null || _opts$onError === void 0 ? void 0 : _opts$onError.call(opts, { ...o,\n        req: opts.req\n      });\n    }\n\n  });\n  const {\n    res\n  } = opts;\n\n  if ('status' in result && (!res.statusCode || res.statusCode === 200)) {\n    res.statusCode = result.status;\n  }\n\n  for (const [key, value] of Object.entries((_result$headers = result.headers) !== null && _result$headers !== void 0 ? _result$headers : {})) {\n    var _result$headers;\n\n    if (typeof value === 'undefined') {\n      continue;\n    }\n\n    res.setHeader(key, value);\n  }\n\n  res.end(result.body);\n  await ((_opts$teardown = opts.teardown) === null || _opts$teardown === void 0 ? void 0 : _opts$teardown.call(opts));\n}\n\nexports.nodeHTTPRequestHandler = nodeHTTPRequestHandler;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3Qvbm9kZUhUVFBSZXF1ZXN0SGFuZGxlci0zNmRkYWJhMi5janMuZGV2LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFVBQVUsbUJBQU8sQ0FBQyxnQkFBSztBQUN2QiwwQkFBMEIsbUJBQU8sQ0FBQyxpSUFBMkM7QUFDN0UsNEJBQTRCLG1CQUFPLENBQUMscUlBQTZDOztBQUVqRjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSw0SkFBNEo7QUFDNUo7QUFDQSxPQUFPO0FBQ1A7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQSxJQUFJOztBQUVKO0FBQ0E7QUFDQTs7QUFFQSw0SUFBNEk7QUFDNUk7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDhCQUE4QiIsInNvdXJjZXMiOlsid2VicGFjazovL2Jhcm53ZWxsLWZhbWlseS10cmVlLXJlbWl4LXJ1bi8uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC9ub2RlSFRUUFJlcXVlc3RIYW5kbGVyLTM2ZGRhYmEyLmNqcy5kZXYuanM/YThmNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1cmwgPSByZXF1aXJlKCd1cmwnKTtcbnZhciByZXNvbHZlSFRUUFJlc3BvbnNlID0gcmVxdWlyZSgnLi9yZXNvbHZlSFRUUFJlc3BvbnNlLTU1YjJjOWJkLmNqcy5kZXYuanMnKTtcbnZhciB0cmFuc2Zvcm1UUlBDUmVzcG9uc2UgPSByZXF1aXJlKCcuL3RyYW5zZm9ybVRSUENSZXNwb25zZS1jNjU0ZWE5Mi5janMuZGV2LmpzJyk7XG5cbmFzeW5jIGZ1bmN0aW9uIGdldFBvc3RCb2R5KHtcbiAgcmVxLFxuICBtYXhCb2R5U2l6ZVxufSkge1xuICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgaWYgKCdib2R5JyBpbiByZXEpIHtcbiAgICAgIHJlc29sdmUoe1xuICAgICAgICBvazogdHJ1ZSxcbiAgICAgICAgZGF0YTogcmVxLmJvZHlcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGxldCBib2R5ID0gJyc7XG4gICAgbGV0IGhhc0JvZHkgPSBmYWxzZTtcbiAgICByZXEub24oJ2RhdGEnLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgYm9keSArPSBkYXRhO1xuICAgICAgaGFzQm9keSA9IHRydWU7XG5cbiAgICAgIGlmICh0eXBlb2YgbWF4Qm9keVNpemUgPT09ICdudW1iZXInICYmIGJvZHkubGVuZ3RoID4gbWF4Qm9keVNpemUpIHtcbiAgICAgICAgcmVzb2x2ZSh7XG4gICAgICAgICAgb2s6IGZhbHNlLFxuICAgICAgICAgIGVycm9yOiBuZXcgdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlLlRSUENFcnJvcih7XG4gICAgICAgICAgICBjb2RlOiAnUEFZTE9BRF9UT09fTEFSR0UnXG4gICAgICAgICAgfSlcbiAgICAgICAgfSk7XG4gICAgICAgIHJlcS5zb2NrZXQuZGVzdHJveSgpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJlcS5vbignZW5kJywgKCkgPT4ge1xuICAgICAgcmVzb2x2ZSh7XG4gICAgICAgIG9rOiB0cnVlLFxuICAgICAgICBkYXRhOiBoYXNCb2R5ID8gYm9keSA6IHVuZGVmaW5lZFxuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xufVxuXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uICovXG5yZXNvbHZlSFRUUFJlc3BvbnNlLmFzc2VydE5vdEJyb3dzZXIoKTtcbmFzeW5jIGZ1bmN0aW9uIG5vZGVIVFRQUmVxdWVzdEhhbmRsZXIob3B0cykge1xuICB2YXIgX29wdHMkdGVhcmRvd247XG5cbiAgY29uc3QgY3JlYXRlQ29udGV4dCA9IGFzeW5jIGZ1bmN0aW9uIF9jcmVhdGVDb250ZXh0KCkge1xuICAgIHZhciBfb3B0cyRjcmVhdGVDb250ZXh0O1xuXG4gICAgcmV0dXJuIGF3YWl0ICgoX29wdHMkY3JlYXRlQ29udGV4dCA9IG9wdHMuY3JlYXRlQ29udGV4dCkgPT09IG51bGwgfHwgX29wdHMkY3JlYXRlQ29udGV4dCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX29wdHMkY3JlYXRlQ29udGV4dC5jYWxsKG9wdHMsIG9wdHMpKTtcbiAgfTtcblxuICBjb25zdCB7XG4gICAgcGF0aCxcbiAgICByb3V0ZXJcbiAgfSA9IG9wdHM7XG4gIGNvbnN0IGJvZHlSZXN1bHQgPSBhd2FpdCBnZXRQb3N0Qm9keShvcHRzKTtcbiAgY29uc3QgcXVlcnkgPSBvcHRzLnJlcS5xdWVyeSA/IG5ldyB1cmwuVVJMU2VhcmNoUGFyYW1zKG9wdHMucmVxLnF1ZXJ5KSA6IG5ldyB1cmwuVVJMU2VhcmNoUGFyYW1zKG9wdHMucmVxLnVybC5zcGxpdCgnPycpWzFdKTtcbiAgY29uc3QgcmVxID0ge1xuICAgIG1ldGhvZDogb3B0cy5yZXEubWV0aG9kLFxuICAgIGhlYWRlcnM6IG9wdHMucmVxLmhlYWRlcnMsXG4gICAgcXVlcnksXG4gICAgYm9keTogYm9keVJlc3VsdC5vayA/IGJvZHlSZXN1bHQuZGF0YSA6IHVuZGVmaW5lZFxuICB9O1xuICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNvbHZlSFRUUFJlc3BvbnNlLnJlc29sdmVIVFRQUmVzcG9uc2Uoe1xuICAgIGJhdGNoaW5nOiBvcHRzLmJhdGNoaW5nLFxuICAgIHJlc3BvbnNlTWV0YTogb3B0cy5yZXNwb25zZU1ldGEsXG4gICAgcGF0aCxcbiAgICBjcmVhdGVDb250ZXh0LFxuICAgIHJvdXRlcixcbiAgICByZXEsXG4gICAgZXJyb3I6IGJvZHlSZXN1bHQub2sgPyBudWxsIDogYm9keVJlc3VsdC5lcnJvcixcblxuICAgIG9uRXJyb3Iobykge1xuICAgICAgdmFyIF9vcHRzJG9uRXJyb3I7XG5cbiAgICAgIG9wdHMgPT09IG51bGwgfHwgb3B0cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9vcHRzJG9uRXJyb3IgPSBvcHRzLm9uRXJyb3IpID09PSBudWxsIHx8IF9vcHRzJG9uRXJyb3IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9vcHRzJG9uRXJyb3IuY2FsbChvcHRzLCB7IC4uLm8sXG4gICAgICAgIHJlcTogb3B0cy5yZXFcbiAgICAgIH0pO1xuICAgIH1cblxuICB9KTtcbiAgY29uc3Qge1xuICAgIHJlc1xuICB9ID0gb3B0cztcblxuICBpZiAoJ3N0YXR1cycgaW4gcmVzdWx0ICYmICghcmVzLnN0YXR1c0NvZGUgfHwgcmVzLnN0YXR1c0NvZGUgPT09IDIwMCkpIHtcbiAgICByZXMuc3RhdHVzQ29kZSA9IHJlc3VsdC5zdGF0dXM7XG4gIH1cblxuICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcygoX3Jlc3VsdCRoZWFkZXJzID0gcmVzdWx0LmhlYWRlcnMpICE9PSBudWxsICYmIF9yZXN1bHQkaGVhZGVycyAhPT0gdm9pZCAwID8gX3Jlc3VsdCRoZWFkZXJzIDoge30pKSB7XG4gICAgdmFyIF9yZXN1bHQkaGVhZGVycztcblxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICByZXMuc2V0SGVhZGVyKGtleSwgdmFsdWUpO1xuICB9XG5cbiAgcmVzLmVuZChyZXN1bHQuYm9keSk7XG4gIGF3YWl0ICgoX29wdHMkdGVhcmRvd24gPSBvcHRzLnRlYXJkb3duKSA9PT0gbnVsbCB8fCBfb3B0cyR0ZWFyZG93biA9PT0gdm9pZCAwID8gdm9pZCAwIDogX29wdHMkdGVhcmRvd24uY2FsbChvcHRzKSk7XG59XG5cbmV4cG9ydHMubm9kZUhUVFBSZXF1ZXN0SGFuZGxlciA9IG5vZGVIVFRQUmVxdWVzdEhhbmRsZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/@trpc/server/dist/nodeHTTPRequestHandler-36ddaba2.cjs.dev.js\n");

/***/ }),

/***/ "(api)/./node_modules/@trpc/server/dist/resolveHTTPResponse-55b2c9bd.cjs.dev.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/resolveHTTPResponse-55b2c9bd.cjs.dev.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar transformTRPCResponse = __webpack_require__(/*! ./transformTRPCResponse-c654ea92.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/dist/transformTRPCResponse-c654ea92.cjs.dev.js\");\nvar codes = __webpack_require__(/*! ./codes-130e62df.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/dist/codes-130e62df.cjs.dev.js\");\n\n/* istanbul ignore file */\nfunction assertNotBrowser() {\n  if (typeof window !== 'undefined' && \"development\" !== 'test' && process.env.JEST_WORKER_ID === undefined) {\n    throw new Error('Imported server-only code in the browser');\n  }\n}\n\nconst TRPC_ERROR_CODES_BY_NUMBER = /*#__PURE__*/codes.invert(codes.TRPC_ERROR_CODES_BY_KEY);\nconst JSONRPC2_TO_HTTP_CODE = {\n  PARSE_ERROR: 400,\n  BAD_REQUEST: 400,\n  NOT_FOUND: 404,\n  INTERNAL_SERVER_ERROR: 500,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  TIMEOUT: 408,\n  CONFLICT: 409,\n  CLIENT_CLOSED_REQUEST: 499,\n  PRECONDITION_FAILED: 412,\n  PAYLOAD_TOO_LARGE: 413,\n  METHOD_NOT_SUPPORTED: 405\n};\n\nfunction getStatusCodeFromKey(code) {\n  var _JSONRPC2_TO_HTTP_COD;\n\n  return (_JSONRPC2_TO_HTTP_COD = JSONRPC2_TO_HTTP_CODE[code]) !== null && _JSONRPC2_TO_HTTP_COD !== void 0 ? _JSONRPC2_TO_HTTP_COD : 500;\n}\n\nfunction getHTTPStatusCode(json) {\n  const arr = Array.isArray(json) ? json : [json];\n  const httpStatuses = new Set(arr.map(res => {\n    if ('error' in res) {\n      const data = res.error.data;\n\n      if (typeof data.httpStatus === 'number') {\n        return data.httpStatus;\n      }\n\n      const code = TRPC_ERROR_CODES_BY_NUMBER[res.error.code];\n      return getStatusCodeFromKey(code);\n    }\n\n    return 200;\n  }));\n\n  if (httpStatuses.size !== 1) {\n    return 207;\n  }\n\n  const httpStatus = httpStatuses.values().next().value;\n  return httpStatus;\n}\nfunction getHTTPStatusCodeFromError(error) {\n  const {\n    code\n  } = error;\n  return getStatusCodeFromKey(code);\n}\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nconst HTTP_METHOD_PROCEDURE_TYPE_MAP = {\n  GET: 'query',\n  POST: 'mutation',\n  PATCH: 'subscription'\n};\n\nfunction getRawProcedureInputOrThrow(req) {\n  try {\n    if (req.method === 'GET') {\n      if (!req.query.has('input')) {\n        return undefined;\n      }\n\n      const raw = req.query.get('input');\n      return JSON.parse(raw);\n    }\n\n    return typeof req.body === 'string' ? JSON.parse(req.body) : req.body;\n  } catch (cause) {\n    throw new transformTRPCResponse.TRPCError({\n      code: 'PARSE_ERROR',\n      cause\n    });\n  }\n}\n\nasync function resolveHTTPResponse(opts) {\n  var _opts$batching$enable, _opts$batching, _HTTP_METHOD_PROCEDUR;\n\n  const {\n    createContext,\n    onError,\n    router,\n    req\n  } = opts;\n  const batchingEnabled = (_opts$batching$enable = (_opts$batching = opts.batching) === null || _opts$batching === void 0 ? void 0 : _opts$batching.enabled) !== null && _opts$batching$enable !== void 0 ? _opts$batching$enable : true;\n\n  if (req.method === 'HEAD') {\n    // can be used for lambda warmup\n    return {\n      status: 204\n    };\n  }\n\n  const type = (_HTTP_METHOD_PROCEDUR = HTTP_METHOD_PROCEDURE_TYPE_MAP[req.method]) !== null && _HTTP_METHOD_PROCEDUR !== void 0 ? _HTTP_METHOD_PROCEDUR : 'unknown';\n  let ctx = undefined;\n  let paths = undefined;\n  const isBatchCall = !!req.query.get('batch');\n\n  function endResponse(untransformedJSON, errors) {\n    var _opts$responseMeta, _opts$responseMeta2;\n\n    let status = getHTTPStatusCode(untransformedJSON);\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    const meta = (_opts$responseMeta = (_opts$responseMeta2 = opts.responseMeta) === null || _opts$responseMeta2 === void 0 ? void 0 : _opts$responseMeta2.call(opts, {\n      ctx,\n      paths,\n      type,\n      data: Array.isArray(untransformedJSON) ? untransformedJSON : [untransformedJSON],\n      errors\n    })) !== null && _opts$responseMeta !== void 0 ? _opts$responseMeta : {};\n\n    for (const [key, value] of Object.entries((_meta$headers = meta.headers) !== null && _meta$headers !== void 0 ? _meta$headers : {})) {\n      var _meta$headers;\n\n      headers[key] = value;\n    }\n\n    if (meta.status) {\n      status = meta.status;\n    }\n\n    const transformedJSON = transformTRPCResponse.transformTRPCResponse(router, untransformedJSON);\n    const body = JSON.stringify(transformedJSON);\n    return {\n      body,\n      status,\n      headers\n    };\n  }\n\n  try {\n    if (opts.error) {\n      throw opts.error;\n    }\n\n    if (isBatchCall && !batchingEnabled) {\n      throw new Error(`Batching is not enabled on the server`);\n    }\n\n    if (type === 'unknown' || type === 'subscription') {\n      throw new transformTRPCResponse.TRPCError({\n        message: `Unexpected request method ${req.method}`,\n        code: 'METHOD_NOT_SUPPORTED'\n      });\n    }\n\n    const rawInput = getRawProcedureInputOrThrow(req);\n    paths = isBatchCall ? opts.path.split(',') : [opts.path];\n    ctx = await createContext();\n\n    const deserializeInputValue = rawValue => {\n      return typeof rawValue !== 'undefined' ? router._def.transformer.input.deserialize(rawValue) : rawValue;\n    };\n\n    const getInputs = () => {\n      if (!isBatchCall) {\n        return {\n          0: deserializeInputValue(rawInput)\n        };\n      }\n\n      if (rawInput == null || typeof rawInput !== 'object' || Array.isArray(rawInput)) {\n        throw new transformTRPCResponse.TRPCError({\n          code: 'BAD_REQUEST',\n          message: '\"input\" needs to be an object when doing a batch call'\n        });\n      }\n\n      const input = {};\n\n      for (const key in rawInput) {\n        const k = key;\n        const rawValue = rawInput[k];\n        const value = deserializeInputValue(rawValue);\n        input[k] = value;\n      }\n\n      return input;\n    };\n\n    const inputs = getInputs();\n    const rawResults = await Promise.all(paths.map(async (path, index) => {\n      const input = inputs[index];\n\n      try {\n        const output = await transformTRPCResponse.callProcedure({\n          ctx,\n          router,\n          path,\n          input,\n          type\n        });\n        return {\n          input,\n          path,\n          data: output\n        };\n      } catch (cause) {\n        const error = transformTRPCResponse.getErrorFromUnknown(cause);\n        onError === null || onError === void 0 ? void 0 : onError({\n          error,\n          path,\n          input,\n          ctx,\n          type: type,\n          req\n        });\n        return {\n          input,\n          path,\n          error\n        };\n      }\n    }));\n    const errors = rawResults.flatMap(obj => obj.error ? [obj.error] : []);\n    const resultEnvelopes = rawResults.map(obj => {\n      const {\n        path,\n        input\n      } = obj;\n\n      if (obj.error) {\n        const json = {\n          id: null,\n          error: router.getErrorShape({\n            error: obj.error,\n            type,\n            path,\n            input,\n            ctx\n          })\n        };\n        return json;\n      } else {\n        const json = {\n          id: null,\n          result: {\n            type: 'data',\n            data: obj.data\n          }\n        };\n        return json;\n      }\n    });\n    const result = isBatchCall ? resultEnvelopes : resultEnvelopes[0];\n    return endResponse(result, errors);\n  } catch (cause) {\n    // we get here if\n    // - batching is called when it's not enabled\n    // - `createContext()` throws\n    // - post body is too large\n    // - input deserialization fails\n    const error = transformTRPCResponse.getErrorFromUnknown(cause);\n    const json = {\n      id: null,\n      error: router.getErrorShape({\n        error,\n        type,\n        path: undefined,\n        input: undefined,\n        ctx\n      })\n    };\n    onError === null || onError === void 0 ? void 0 : onError({\n      error,\n      path: undefined,\n      input: undefined,\n      ctx,\n      type: type,\n      req\n    });\n    return endResponse(json, [error]);\n  }\n}\n\nexports.assertNotBrowser = assertNotBrowser;\nexports.getHTTPStatusCodeFromError = getHTTPStatusCodeFromError;\nexports.resolveHTTPResponse = resolveHTTPResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./node_modules/@trpc/server/dist/resolveHTTPResponse-55b2c9bd.cjs.dev.js\n");

/***/ }),

/***/ "(api)/./node_modules/@trpc/server/dist/transformTRPCResponse-c654ea92.cjs.dev.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/transformTRPCResponse-c654ea92.cjs.dev.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nfunction getMessageFromUnkownError(err, fallback) {\n  if (typeof err === 'string') {\n    return err;\n  }\n\n  if (err instanceof Error && typeof err.message === 'string') {\n    return err.message;\n  }\n\n  return fallback;\n}\nfunction getErrorFromUnknown(cause) {\n  // this should ideally be an `instanceof TRPCError` but for some reason that isn't working\n  // ref https://github.com/trpc/trpc/issues/331\n  if (cause instanceof Error && cause.name === 'TRPCError') {\n    return cause;\n  }\n\n  const err = new TRPCError({\n    code: 'INTERNAL_SERVER_ERROR',\n    cause\n  }); // take stack trace from cause\n\n  if (cause instanceof Error) {\n    err.stack = cause.stack;\n  }\n\n  return err;\n}\n\nclass TRPCError extends Error {\n  /**\n   * @deprecated use `cause`\n   */\n  constructor(opts) {\n    var _opts$cause, _opts$message;\n\n    const cause = (_opts$cause = opts.cause) !== null && _opts$cause !== void 0 ? _opts$cause : opts.originalError;\n    const code = opts.code;\n    const message = (_opts$message = opts.message) !== null && _opts$message !== void 0 ? _opts$message : getMessageFromUnkownError(cause, code); // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore https://github.com/tc39/proposal-error-cause\n\n    super(message, {\n      cause\n    });\n    this.originalError = void 0;\n    this.cause = void 0;\n    this.code = void 0;\n    this.code = code;\n    this.cause = this.originalError = cause;\n    this.name = 'TRPCError';\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n\n}\n\nasync function callProcedure(opts) {\n  const {\n    type,\n    path,\n    input\n  } = opts;\n  const caller = opts.router.createCaller(opts.ctx);\n\n  if (type === 'query') {\n    return caller.query(path, input);\n  }\n\n  if (type === 'mutation') {\n    return caller.mutation(path, input);\n  }\n\n  if (type === 'subscription') {\n    const sub = await caller.subscription(path, input);\n    return sub;\n  }\n  /* istanbul ignore next */\n\n\n  throw new Error(`Unknown procedure type ${type}`);\n}\n\nfunction transformTRPCResponseItem(router, item) {\n  if ('error' in item) {\n    return { ...item,\n      error: router._def.transformer.output.serialize(item.error)\n    };\n  }\n\n  if (item.result.type !== 'data') {\n    return item;\n  }\n\n  return { ...item,\n    result: { ...item.result,\n      data: router._def.transformer.output.serialize(item.result.data)\n    }\n  };\n}\n/**\n * Takes a unserialized `TRPCResponse` and serializes it with the router's transformers\n **/\n\n\nfunction transformTRPCResponse(router, itemOrItems) {\n  return Array.isArray(itemOrItems) ? itemOrItems.map(item => transformTRPCResponseItem(router, item)) : transformTRPCResponseItem(router, itemOrItems);\n}\n\nexports.TRPCError = TRPCError;\nexports.callProcedure = callProcedure;\nexports.getErrorFromUnknown = getErrorFromUnknown;\nexports.transformTRPCResponse = transformTRPCResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlLWM2NTRlYTkyLmNqcy5kZXYuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRyxHQUFHOztBQUVOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0pBQWtKO0FBQ2xKOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0EsNENBQTRDLEtBQUs7QUFDakQ7O0FBRUE7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLFdBQVc7QUFDWCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUI7QUFDakIscUJBQXFCO0FBQ3JCLDJCQUEyQjtBQUMzQiw2QkFBNkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXJud2VsbC1mYW1pbHktdHJlZS1yZW1peC1ydW4vLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlLWM2NTRlYTkyLmNqcy5kZXYuanM/YjhlYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGdldE1lc3NhZ2VGcm9tVW5rb3duRXJyb3IoZXJyLCBmYWxsYmFjaykge1xuICBpZiAodHlwZW9mIGVyciA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZXJyO1xuICB9XG5cbiAgaWYgKGVyciBpbnN0YW5jZW9mIEVycm9yICYmIHR5cGVvZiBlcnIubWVzc2FnZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZXJyLm1lc3NhZ2U7XG4gIH1cblxuICByZXR1cm4gZmFsbGJhY2s7XG59XG5mdW5jdGlvbiBnZXRFcnJvckZyb21Vbmtub3duKGNhdXNlKSB7XG4gIC8vIHRoaXMgc2hvdWxkIGlkZWFsbHkgYmUgYW4gYGluc3RhbmNlb2YgVFJQQ0Vycm9yYCBidXQgZm9yIHNvbWUgcmVhc29uIHRoYXQgaXNuJ3Qgd29ya2luZ1xuICAvLyByZWYgaHR0cHM6Ly9naXRodWIuY29tL3RycGMvdHJwYy9pc3N1ZXMvMzMxXG4gIGlmIChjYXVzZSBpbnN0YW5jZW9mIEVycm9yICYmIGNhdXNlLm5hbWUgPT09ICdUUlBDRXJyb3InKSB7XG4gICAgcmV0dXJuIGNhdXNlO1xuICB9XG5cbiAgY29uc3QgZXJyID0gbmV3IFRSUENFcnJvcih7XG4gICAgY29kZTogJ0lOVEVSTkFMX1NFUlZFUl9FUlJPUicsXG4gICAgY2F1c2VcbiAgfSk7IC8vIHRha2Ugc3RhY2sgdHJhY2UgZnJvbSBjYXVzZVxuXG4gIGlmIChjYXVzZSBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgZXJyLnN0YWNrID0gY2F1c2Uuc3RhY2s7XG4gIH1cblxuICByZXR1cm4gZXJyO1xufVxuXG5jbGFzcyBUUlBDRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCB1c2UgYGNhdXNlYFxuICAgKi9cbiAgY29uc3RydWN0b3Iob3B0cykge1xuICAgIHZhciBfb3B0cyRjYXVzZSwgX29wdHMkbWVzc2FnZTtcblxuICAgIGNvbnN0IGNhdXNlID0gKF9vcHRzJGNhdXNlID0gb3B0cy5jYXVzZSkgIT09IG51bGwgJiYgX29wdHMkY2F1c2UgIT09IHZvaWQgMCA/IF9vcHRzJGNhdXNlIDogb3B0cy5vcmlnaW5hbEVycm9yO1xuICAgIGNvbnN0IGNvZGUgPSBvcHRzLmNvZGU7XG4gICAgY29uc3QgbWVzc2FnZSA9IChfb3B0cyRtZXNzYWdlID0gb3B0cy5tZXNzYWdlKSAhPT0gbnVsbCAmJiBfb3B0cyRtZXNzYWdlICE9PSB2b2lkIDAgPyBfb3B0cyRtZXNzYWdlIDogZ2V0TWVzc2FnZUZyb21Vbmtvd25FcnJvcihjYXVzZSwgY29kZSk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnRcbiAgICAvLyBAdHMtaWdub3JlIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLWVycm9yLWNhdXNlXG5cbiAgICBzdXBlcihtZXNzYWdlLCB7XG4gICAgICBjYXVzZVxuICAgIH0pO1xuICAgIHRoaXMub3JpZ2luYWxFcnJvciA9IHZvaWQgMDtcbiAgICB0aGlzLmNhdXNlID0gdm9pZCAwO1xuICAgIHRoaXMuY29kZSA9IHZvaWQgMDtcbiAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgIHRoaXMuY2F1c2UgPSB0aGlzLm9yaWdpbmFsRXJyb3IgPSBjYXVzZTtcbiAgICB0aGlzLm5hbWUgPSAnVFJQQ0Vycm9yJztcbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgbmV3LnRhcmdldC5wcm90b3R5cGUpO1xuICB9XG5cbn1cblxuYXN5bmMgZnVuY3Rpb24gY2FsbFByb2NlZHVyZShvcHRzKSB7XG4gIGNvbnN0IHtcbiAgICB0eXBlLFxuICAgIHBhdGgsXG4gICAgaW5wdXRcbiAgfSA9IG9wdHM7XG4gIGNvbnN0IGNhbGxlciA9IG9wdHMucm91dGVyLmNyZWF0ZUNhbGxlcihvcHRzLmN0eCk7XG5cbiAgaWYgKHR5cGUgPT09ICdxdWVyeScpIHtcbiAgICByZXR1cm4gY2FsbGVyLnF1ZXJ5KHBhdGgsIGlucHV0KTtcbiAgfVxuXG4gIGlmICh0eXBlID09PSAnbXV0YXRpb24nKSB7XG4gICAgcmV0dXJuIGNhbGxlci5tdXRhdGlvbihwYXRoLCBpbnB1dCk7XG4gIH1cblxuICBpZiAodHlwZSA9PT0gJ3N1YnNjcmlwdGlvbicpIHtcbiAgICBjb25zdCBzdWIgPSBhd2FpdCBjYWxsZXIuc3Vic2NyaXB0aW9uKHBhdGgsIGlucHV0KTtcbiAgICByZXR1cm4gc3ViO1xuICB9XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5cblxuICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gcHJvY2VkdXJlIHR5cGUgJHt0eXBlfWApO1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm1UUlBDUmVzcG9uc2VJdGVtKHJvdXRlciwgaXRlbSkge1xuICBpZiAoJ2Vycm9yJyBpbiBpdGVtKSB7XG4gICAgcmV0dXJuIHsgLi4uaXRlbSxcbiAgICAgIGVycm9yOiByb3V0ZXIuX2RlZi50cmFuc2Zvcm1lci5vdXRwdXQuc2VyaWFsaXplKGl0ZW0uZXJyb3IpXG4gICAgfTtcbiAgfVxuXG4gIGlmIChpdGVtLnJlc3VsdC50eXBlICE9PSAnZGF0YScpIHtcbiAgICByZXR1cm4gaXRlbTtcbiAgfVxuXG4gIHJldHVybiB7IC4uLml0ZW0sXG4gICAgcmVzdWx0OiB7IC4uLml0ZW0ucmVzdWx0LFxuICAgICAgZGF0YTogcm91dGVyLl9kZWYudHJhbnNmb3JtZXIub3V0cHV0LnNlcmlhbGl6ZShpdGVtLnJlc3VsdC5kYXRhKVxuICAgIH1cbiAgfTtcbn1cbi8qKlxuICogVGFrZXMgYSB1bnNlcmlhbGl6ZWQgYFRSUENSZXNwb25zZWAgYW5kIHNlcmlhbGl6ZXMgaXQgd2l0aCB0aGUgcm91dGVyJ3MgdHJhbnNmb3JtZXJzXG4gKiovXG5cblxuZnVuY3Rpb24gdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlKHJvdXRlciwgaXRlbU9ySXRlbXMpIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoaXRlbU9ySXRlbXMpID8gaXRlbU9ySXRlbXMubWFwKGl0ZW0gPT4gdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlSXRlbShyb3V0ZXIsIGl0ZW0pKSA6IHRyYW5zZm9ybVRSUENSZXNwb25zZUl0ZW0ocm91dGVyLCBpdGVtT3JJdGVtcyk7XG59XG5cbmV4cG9ydHMuVFJQQ0Vycm9yID0gVFJQQ0Vycm9yO1xuZXhwb3J0cy5jYWxsUHJvY2VkdXJlID0gY2FsbFByb2NlZHVyZTtcbmV4cG9ydHMuZ2V0RXJyb3JGcm9tVW5rbm93biA9IGdldEVycm9yRnJvbVVua25vd247XG5leHBvcnRzLnRyYW5zZm9ybVRSUENSZXNwb25zZSA9IHRyYW5zZm9ybVRSUENSZXNwb25zZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/@trpc/server/dist/transformTRPCResponse-c654ea92.cjs.dev.js\n");

/***/ }),

/***/ "(api)/./pages/api/trpc/[trpc].ts":
/*!**********************************!*\
  !*** ./pages/api/trpc/[trpc].ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"appRouter\": () => (/* binding */ appRouter),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server */ \"@trpc/server\");\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_trpc_server__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @trpc/server/adapters/next */ \"(api)/./node_modules/@trpc/server/adapters/next/dist/trpc-server-adapters-next.cjs.js\");\n/* harmony import */ var _trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var utils_positions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! utils/positions */ \"(api)/./utils/positions.ts\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! zod */ \"zod\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([zod__WEBPACK_IMPORTED_MODULE_3__]);\nzod__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\nconst appRouter = _trpc_server__WEBPACK_IMPORTED_MODULE_0__.router().query(\"positions\", {\n    async resolve () {\n        const positions = await (0,utils_positions__WEBPACK_IMPORTED_MODULE_2__.getPositions)();\n        return {\n            positions\n        };\n    }\n}).mutation(\"position\", {\n    // using zod schema to validate and infer input values\n    input: zod__WEBPACK_IMPORTED_MODULE_3__.z.object({\n        memberId: zod__WEBPACK_IMPORTED_MODULE_3__.z.string(),\n        coordinateX: zod__WEBPACK_IMPORTED_MODULE_3__.z.number(),\n        coordinateY: zod__WEBPACK_IMPORTED_MODULE_3__.z.number()\n    }),\n    async resolve ({ input  }) {\n        const { memberId , coordinateX , coordinateY  } = input;\n        const position = await (0,utils_positions__WEBPACK_IMPORTED_MODULE_2__.addPosition)(memberId, coordinateX, coordinateY);\n        return {\n            position\n        };\n    }\n});\n// export API handler\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_1__.createNextApiHandler({\n    router: appRouter,\n    createContext: ()=>null\n}));\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvdHJwYy9bdHJwY10udHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBcUM7QUFDa0I7QUFDSztBQUNwQztBQUVqQixNQUFNSyxTQUFTLEdBQUdMLGdEQUFXLEVBQUUsQ0FDckNPLEtBQUssQ0FBQyxXQUFXLEVBQUU7SUFDbEIsTUFBTUMsT0FBTyxJQUFHO1FBQ2QsTUFBTUMsU0FBUyxHQUFHLE1BQU1OLDZEQUFZLEVBQUU7UUFDdEMsT0FBTztZQUNMTSxTQUFTO1NBQ1YsQ0FBQztLQUNIO0NBQ0YsQ0FBQyxDQUNEQyxRQUFRLENBQUMsVUFBVSxFQUFFO0lBQ3BCLHNEQUFzRDtJQUN0REMsS0FBSyxFQUFFUCx5Q0FDRSxDQUFDO1FBQ05TLFFBQVEsRUFBRVQseUNBQVEsRUFBRTtRQUNwQlcsV0FBVyxFQUFFWCx5Q0FBUSxFQUFFO1FBQ3ZCYSxXQUFXLEVBQUViLHlDQUFRLEVBQUU7S0FDeEIsQ0FBQztJQUNKLE1BQU1JLE9BQU8sRUFBQyxFQUFFRyxLQUFLLEdBQUUsRUFBRTtRQUN2QixNQUFNLEVBQUVFLFFBQVEsR0FBRUUsV0FBVyxHQUFFRSxXQUFXLEdBQUMsR0FBR04sS0FBSztRQUNuRCxNQUFNTyxRQUFRLEdBQUcsTUFBTWhCLDREQUFXLENBQUNXLFFBQVEsRUFBRUUsV0FBVyxFQUFFRSxXQUFXLENBQUM7UUFDdEUsT0FBTztZQUNMQyxRQUFRO1NBQ1QsQ0FBQztLQUNIO0NBQ0YsQ0FBQztBQUtGLHFCQUFxQjtBQUNyQixpRUFBZWpCLDRFQUE2QixDQUFDO0lBQzNDSyxNQUFNLEVBQUVELFNBQVM7SUFDakJlLGFBQWEsRUFBRSxJQUFNLElBQUk7Q0FDMUIsQ0FBQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmFybndlbGwtZmFtaWx5LXRyZWUtcmVtaXgtcnVuLy4vcGFnZXMvYXBpL3RycGMvW3RycGNdLnRzPzJlNDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgdHJwYyBmcm9tICdAdHJwYy9zZXJ2ZXInO1xuaW1wb3J0ICogYXMgdHJwY05leHQgZnJvbSAnQHRycGMvc2VydmVyL2FkYXB0ZXJzL25leHQnO1xuaW1wb3J0IHsgYWRkUG9zaXRpb24sIGdldFBvc2l0aW9ucyB9IGZyb20gJ3V0aWxzL3Bvc2l0aW9ucyc7XG5pbXBvcnQgeyB6IH0gZnJvbSAnem9kJztcblxuZXhwb3J0IGNvbnN0IGFwcFJvdXRlciA9IHRycGMucm91dGVyKClcbi5xdWVyeSgncG9zaXRpb25zJywge1xuICBhc3luYyByZXNvbHZlKCkge1xuICAgIGNvbnN0IHBvc2l0aW9ucyA9IGF3YWl0IGdldFBvc2l0aW9ucygpO1xuICAgIHJldHVybiB7XG4gICAgICBwb3NpdGlvbnNcbiAgICB9O1xuICB9LFxufSlcbi5tdXRhdGlvbigncG9zaXRpb24nLCB7XG4gIC8vIHVzaW5nIHpvZCBzY2hlbWEgdG8gdmFsaWRhdGUgYW5kIGluZmVyIGlucHV0IHZhbHVlc1xuICBpbnB1dDogelxuICAgIC5vYmplY3Qoe1xuICAgICAgbWVtYmVySWQ6IHouc3RyaW5nKCksXG4gICAgICBjb29yZGluYXRlWDogei5udW1iZXIoKSxcbiAgICAgIGNvb3JkaW5hdGVZOiB6Lm51bWJlcigpLFxuICAgIH0pLFxuICBhc3luYyByZXNvbHZlKHsgaW5wdXQgfSkge1xuICAgIGNvbnN0IHsgbWVtYmVySWQsIGNvb3JkaW5hdGVYLCBjb29yZGluYXRlWX0gPSBpbnB1dDtcbiAgICBjb25zdCBwb3NpdGlvbiA9IGF3YWl0IGFkZFBvc2l0aW9uKG1lbWJlcklkLCBjb29yZGluYXRlWCwgY29vcmRpbmF0ZVkpO1xuICAgIHJldHVybiB7XG4gICAgICBwb3NpdGlvblxuICAgIH07XG4gIH0sXG59KVxuXG4vLyBleHBvcnQgdHlwZSBkZWZpbml0aW9uIG9mIEFQSVxuZXhwb3J0IHR5cGUgQXBwUm91dGVyID0gdHlwZW9mIGFwcFJvdXRlcjtcblxuLy8gZXhwb3J0IEFQSSBoYW5kbGVyXG5leHBvcnQgZGVmYXVsdCB0cnBjTmV4dC5jcmVhdGVOZXh0QXBpSGFuZGxlcih7XG4gIHJvdXRlcjogYXBwUm91dGVyLFxuICBjcmVhdGVDb250ZXh0OiAoKSA9PiBudWxsLFxufSk7Il0sIm5hbWVzIjpbInRycGMiLCJ0cnBjTmV4dCIsImFkZFBvc2l0aW9uIiwiZ2V0UG9zaXRpb25zIiwieiIsImFwcFJvdXRlciIsInJvdXRlciIsInF1ZXJ5IiwicmVzb2x2ZSIsInBvc2l0aW9ucyIsIm11dGF0aW9uIiwiaW5wdXQiLCJvYmplY3QiLCJtZW1iZXJJZCIsInN0cmluZyIsImNvb3JkaW5hdGVYIiwibnVtYmVyIiwiY29vcmRpbmF0ZVkiLCJwb3NpdGlvbiIsImNyZWF0ZU5leHRBcGlIYW5kbGVyIiwiY3JlYXRlQ29udGV4dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/trpc/[trpc].ts\n");

/***/ }),

/***/ "(api)/./utils/positions.ts":
/*!****************************!*\
  !*** ./utils/positions.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addPosition\": () => (/* binding */ addPosition),\n/* harmony export */   \"getPositions\": () => (/* binding */ getPositions)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nconst getPositions = async ()=>{\n    await prisma.$connect;\n    const positions = prisma.positions.findMany();\n    prisma.$disconnect();\n    return positions;\n};\nconst addPosition = async (id, x, y)=>{\n    await prisma.$connect;\n    console.log({\n        id,\n        x,\n        y\n    });\n    const findMemberPosition = await prisma.positions.findFirst({\n        where: {\n            memberId: id\n        }\n    });\n    console.log({\n        findMemberPosition\n    });\n    if (!findMemberPosition) {\n        const createPosition = await prisma.positions.create({\n            data: {\n                memberId: id,\n                coordinateX: x,\n                coordinateY: y\n            }\n        });\n        return createPosition;\n    } else {\n        const updatePosition = await prisma.positions.updateMany({\n            where: {\n                memberId: id\n            },\n            data: {\n                coordinateX: x,\n                coordinateY: y\n            }\n        });\n        return updatePosition;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi91dGlscy9wb3NpdGlvbnMudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE2QztBQUM3QyxNQUFNQyxNQUFNLEdBQUcsSUFBSUQsd0RBQVksRUFBRTtBQUUxQixNQUFNRSxZQUFZLEdBQUcsVUFBWTtJQUN0QyxNQUFNRCxNQUFNLENBQUNFLFFBQVEsQ0FBQztJQUV0QixNQUFNQyxTQUFTLEdBQUdILE1BQU0sQ0FBQ0csU0FBUyxDQUFDQyxRQUFRLEVBQUU7SUFDN0NKLE1BQU0sQ0FBQ0ssV0FBVyxFQUFFLENBQUM7SUFDckIsT0FBT0YsU0FBUyxDQUFDO0NBQ2xCLENBQUM7QUFFSyxNQUFNRyxXQUFXLEdBQUcsT0FBT0MsRUFBVSxFQUFFQyxDQUFTLEVBQUVDLENBQVMsR0FBSztJQUNyRSxNQUFNVCxNQUFNLENBQUNFLFFBQVEsQ0FBQztJQUN0QlEsT0FBTyxDQUFDQyxHQUFHLENBQUM7UUFDVkosRUFBRTtRQUNGQyxDQUFDO1FBQ0RDLENBQUM7S0FDRixDQUFDO0lBQ0YsTUFBTUcsa0JBQWtCLEdBQUksTUFBTVosTUFBTSxDQUFDRyxTQUFTLENBQUNVLFNBQVMsQ0FBQztRQUMzREMsS0FBSyxFQUFFO1lBQ0xDLFFBQVEsRUFBRVIsRUFBRTtTQUNiO0tBQ0YsQ0FBQztJQUVGRyxPQUFPLENBQUNDLEdBQUcsQ0FBQztRQUFFQyxrQkFBa0I7S0FBRSxDQUFDLENBQUM7SUFFcEMsSUFBRyxDQUFDQSxrQkFBa0IsRUFBRTtRQUN0QixNQUFNSSxjQUFjLEdBQUcsTUFBTWhCLE1BQU0sQ0FBQ0csU0FBUyxDQUFDYyxNQUFNLENBQUM7WUFDbkRDLElBQUksRUFBRTtnQkFDSkgsUUFBUSxFQUFFUixFQUFFO2dCQUNaWSxXQUFXLEVBQUVYLENBQUM7Z0JBQ2RZLFdBQVcsRUFBRVgsQ0FBQzthQUNmO1NBQ0YsQ0FBQztRQUNGLE9BQU9PLGNBQWMsQ0FBQztLQUN2QixNQUFLO1FBQ0osTUFBTUssY0FBYyxHQUFHLE1BQU1yQixNQUFNLENBQUNHLFNBQVMsQ0FBQ21CLFVBQVUsQ0FBQztZQUN2RFIsS0FBSyxFQUFFO2dCQUNMQyxRQUFRLEVBQUVSLEVBQUU7YUFDYjtZQUNEVyxJQUFJLEVBQUU7Z0JBQ0pDLFdBQVcsRUFBRVgsQ0FBQztnQkFDZFksV0FBVyxFQUFFWCxDQUFDO2FBQ2Y7U0FDRixDQUFDO1FBRUYsT0FBT1ksY0FBYyxDQUFDO0tBQ3ZCO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXJud2VsbC1mYW1pbHktdHJlZS1yZW1peC1ydW4vLi91dGlscy9wb3NpdGlvbnMudHM/MmYzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tICdAcHJpc21hL2NsaWVudCdcbmNvbnN0IHByaXNtYSA9IG5ldyBQcmlzbWFDbGllbnQoKTtcblxuZXhwb3J0IGNvbnN0IGdldFBvc2l0aW9ucyA9IGFzeW5jICgpID0+IHtcbiAgYXdhaXQgcHJpc21hLiRjb25uZWN0O1xuXG4gIGNvbnN0IHBvc2l0aW9ucyA9IHByaXNtYS5wb3NpdGlvbnMuZmluZE1hbnkoKTtcbiAgcHJpc21hLiRkaXNjb25uZWN0KCk7XG4gIHJldHVybiBwb3NpdGlvbnM7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkUG9zaXRpb24gPSBhc3luYyAoaWQ6IHN0cmluZywgeDogbnVtYmVyLCB5OiBudW1iZXIpID0+IHtcbiAgYXdhaXQgcHJpc21hLiRjb25uZWN0O1xuICBjb25zb2xlLmxvZyh7XG4gICAgaWQsXG4gICAgeCxcbiAgICB5XG4gIH0pXG4gIGNvbnN0IGZpbmRNZW1iZXJQb3NpdGlvbiA9ICBhd2FpdCBwcmlzbWEucG9zaXRpb25zLmZpbmRGaXJzdCh7XG4gICAgd2hlcmU6IHtcbiAgICAgIG1lbWJlcklkOiBpZFxuICAgIH1cbiAgfSk7XG5cbiAgY29uc29sZS5sb2coeyBmaW5kTWVtYmVyUG9zaXRpb24gfSk7XG5cbiAgaWYoIWZpbmRNZW1iZXJQb3NpdGlvbikge1xuICAgIGNvbnN0IGNyZWF0ZVBvc2l0aW9uID0gYXdhaXQgcHJpc21hLnBvc2l0aW9ucy5jcmVhdGUoe1xuICAgICAgZGF0YToge1xuICAgICAgICBtZW1iZXJJZDogaWQsXG4gICAgICAgIGNvb3JkaW5hdGVYOiB4LFxuICAgICAgICBjb29yZGluYXRlWTogeVxuICAgICAgfVxuICAgIH0pXG4gICAgcmV0dXJuIGNyZWF0ZVBvc2l0aW9uO1xuICB9ZWxzZSB7XG4gICAgY29uc3QgdXBkYXRlUG9zaXRpb24gPSBhd2FpdCBwcmlzbWEucG9zaXRpb25zLnVwZGF0ZU1hbnkoe1xuICAgICAgd2hlcmU6IHtcbiAgICAgICAgbWVtYmVySWQ6IGlkXG4gICAgICB9LFxuICAgICAgZGF0YToge1xuICAgICAgICBjb29yZGluYXRlWDogeCxcbiAgICAgICAgY29vcmRpbmF0ZVk6IHlcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICByZXR1cm4gdXBkYXRlUG9zaXRpb247XG4gIH1cbiAgXG59Il0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsInByaXNtYSIsImdldFBvc2l0aW9ucyIsIiRjb25uZWN0IiwicG9zaXRpb25zIiwiZmluZE1hbnkiLCIkZGlzY29ubmVjdCIsImFkZFBvc2l0aW9uIiwiaWQiLCJ4IiwieSIsImNvbnNvbGUiLCJsb2ciLCJmaW5kTWVtYmVyUG9zaXRpb24iLCJmaW5kRmlyc3QiLCJ3aGVyZSIsIm1lbWJlcklkIiwiY3JlYXRlUG9zaXRpb24iLCJjcmVhdGUiLCJkYXRhIiwiY29vcmRpbmF0ZVgiLCJjb29yZGluYXRlWSIsInVwZGF0ZVBvc2l0aW9uIiwidXBkYXRlTWFueSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./utils/positions.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/trpc/[trpc].ts"));
module.exports = __webpack_exports__;

})();